#include <glut.h>
#include <cmath>

int ww = 800, wh = 600;
int xi, yi;

void putPixel(int x, int y) {
 
    int centerX = 400, centerY = 400;
    
    if (((x - centerX) * (x - centerX)) + ((y - centerY) * (y - centerY)) < 40000) {
        glColor3f(0.3, 0.2, 0.0);
        glBegin(GL_POINTS);
        glVertex2i(x, y);
        glEnd();
        glFlush();
    }
}


void plotCircle(int h, int k, int x, int y) {
    putPixel(x + h, y + k);
    putPixel(y + h, x + k);
    putPixel(-y + h, x + k);
    putPixel(-x + h, y + k);
    putPixel(-x + h, -y + k);
    putPixel(-y + h, -x + k);
    putPixel(y + h, -x + k);
    putPixel(x + h, -y + k);
}

void midpointCircle(int h, int k, int r) {
    int x = 0, y = r, d = 1 - r;
    while (x <= y) {
        plotCircle(h, k, x, y);
        if (d < 0) {
            d += 2 * x + 3;
        } else {
            d += 2 * (x - y) + 5;
            y--;
        }
        x++;
    }
}

void drawFlowerPattern(int h, int k, int r) {
    midpointCircle(h, k, r);

    for (int i = 0; i < 6; i++) {
        float angle = i * 60.0 * 3.14159265358979323846/ 180.0;
        int newX = h + r * cos(angle);
        int newY = k + r * sin(angle);
        midpointCircle(newX, newY, r);
    }
}

void display() {
    glClearColor(0.4, 0.7, 0.5, 1.0);
    glClear(GL_COLOR_BUFFER_BIT);
    glFlush();
}

void mouse(int btn, int state, int x, int y) {
    if (btn == GLUT_LEFT_BUTTON && state == GLUT_DOWN) {
        xi =400;
        yi =400;
        drawFlowerPattern(xi, yi, 200);
    }

    if (btn == GLUT_RIGHT_BUTTON) {
        glClear(GL_COLOR_BUFFER_BIT);
        glFlush();
    }
}

void myinit() {
    glViewport(0, 0, ww, wh);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluOrtho2D(0.0, (GLdouble)ww, 0.0, (GLdouble)wh);
    glMatrixMode(GL_MODELVIEW);
}

int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(ww, wh);
    glutCreateWindow("Flower Algorithm");
    glutDisplayFunc(display);
    myinit();
    glutMouseFunc(mouse);
    glutMainLoop();
    return 0;
}
